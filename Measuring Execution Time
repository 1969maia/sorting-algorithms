import timeit
import random

# List containing the sizes of the data sets that the sorting algorithm will be applied to
data_set_sizes = [10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000]

# Function to generate a data set:
def generate_data_set(size):
	pass

# Function to display execution time in appropriate time units 
# The default time unit for the "timeit" function is the second
def format_execution_time(execution_time):
    if execution_time < 1:
        return f"{execution_time * 1000:.2f} milliseconds"
    elif execution_time < 60:
        return f"{execution_time:.2f} seconds"
    else:
        return f"{execution_time / 60:.2f} minutes"

def sorting_algorithm(list):
	return list

# The sorting algorithm is applied to randomly generated lists of the sizes considered.
for size in data_set_sizes:
    data_set = list(generate_data_set(size))
    execution_time = timeit.timeit(lambda: BubbleSort(data_set), number=1)
    formatted_time = format_execution_time(execution_time)
    print(f"Sorting a list of {size} randomly generated integers, using {algorithm}, takes {formatted_time}.")
